1. Buat 1 file component Chosen.jsx, isi dengan div terluar dengan id chosen-one
2. Buat 1 file component PokemonList.jsx isi dengan div terluar dengan id pokemon-list
3. Buat 1 file component Others.jsx dan isi dengan component lain minimal 4 component reusable
4. Buat 1 file Page.jsx & gunakan data pokemon.js untuk merender gabungan component2 1-3
5. Import Page.jsx ke dalam App.js

12. Buat branch baru (git) sesi-tiga
13. Buat folder page & component
14. Pindah seluruh file komponen ke dalam folder "component" selain Page.jsx
15. Rename Page.jsx menjadi Homepage.jsx dan pindahkan ke folder "page"
16. Atur halaman dengan react router DOM dan pastikan Homepage berada pada route "/"
17. Tambahkan halaman location dengan route "/location" dan ambil data listing location dari "https://pokeapi.co/api/v2/location-area", tambahkan button dimana ketika diclick akan redirect ke halaman "/location/:id" contoh "/location/1"
18.Tambahkan halaman pokemons dengan route "/location/:id" dan ambil data listing location dari "https://pokeapi.co/api/v2/location-area/${id}", halaman ini mirip seperti halaman homepage hanya beda data pokemons saja dimana data pokemons diambil dari "pokemon_encounters". Tambahkan h1 di paling atas halaman dengan data dari nama location.


const [loading, setLoading] = useState([]);
  const [data, setData] = useState([]);
  
  useEffect (()=>{
    fetch("https://jsonplaceholder.typicode.com/todos")
      .then((response) => response.json())
      .then((json) => {
        setData(json);
        setLoading(false);
      })
  }, [])
  if (loading) return "Loading...";

  return (
    <div className="App">
      <h1>Todo List</h1>
      <div className="container">
      {data.map((el)=>{
        return (<TodoCard title={el.title} completed={el.completed} id={el.id}/>)
      })}
      </div>
    </div>
  )